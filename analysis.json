{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcBehaviors",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "api-form-mixin.html",
        "start": {
          "line": 21,
          "column": 2
        },
        "end": {
          "line": 21,
          "column": 27
        }
      },
      "mixins": [
        {
          "description": "A behavior to be implemented to elements that processes AMF data via form\ndata model and displays forms from the model.\n\nIt contains common methods used in forms.\n\nUse `api-form-styles` from this package to include common styles.",
          "summary": "",
          "path": "api-form-mixin.html",
          "properties": [
            {
              "name": "model",
              "type": "Array",
              "description": "View model to use to render the form.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 46,
                  "column": 8
                },
                "end": {
                  "line": 49,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "optionalOpened",
              "type": "boolean",
              "description": "Set to true to show optional parameters (not required by the API).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 53,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "hasOptional",
              "type": "boolean",
              "description": "Computed value from `allowHideOptional` and view model.\n`true` if current model has any optional property.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 8
                },
                "end": {
                  "line": 65,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true
                }
              }
            },
            {
              "name": "allowHideOptional",
              "type": "boolean",
              "description": "If set it computes `hasOptional` property and shows checkbox in the\nform to show / hide optional properties.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 70,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "renderOptionalCheckbox",
              "type": "boolean",
              "description": "Computed flag to determine if optional checkbox can be rendered",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 77,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "allowDisableParams",
              "type": "boolean",
              "description": "If set, enable / disable param checkbox is rendered next to each\nform item.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "allowCustom",
              "type": "boolean",
              "description": "When set, renders \"add custom\" item button.\nIf the element is to be used withouth AMF model this should always\nbe enabled. Otherwise users won't be able to add a parameter.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 88,
                  "column": 8
                },
                "end": {
                  "line": 88,
                  "column": 28
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "narrow",
              "type": "boolean",
              "description": "Renders items in \"narrow\" view",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 92,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "computeFormRowClass",
              "description": "Computes class name for each form item depending on the item state.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 4
                },
                "end": {
                  "line": 118,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item",
                  "type": "Object",
                  "description": "Model item"
                },
                {
                  "name": "allowHideOptional",
                  "type": "Boolean"
                },
                {
                  "name": "optionalOpened",
                  "type": "Boolean",
                  "description": "True if optional parameters are rendered."
                },
                {
                  "name": "allowDisableParams",
                  "type": "Boolean"
                }
              ],
              "return": {
                "type": "String"
              }
            },
            {
              "name": "toggleOptionalParams",
              "description": "Toggles visibility of optional parameters.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 122,
                  "column": 4
                },
                "end": {
                  "line": 127,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getForm",
              "description": "Returns a reference to the form element, if the DOM is ready.\nThis only works with `iron-form` that is in the DOM.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 136,
                  "column": 4
                },
                "end": {
                  "line": 144,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "IronForm",
                "desc": "Iron form element. It may be `undefined` if local\nDOM is not yet initialized."
              }
            },
            {
              "name": "_getValidity",
              "description": "Validates the form. It uses `iron-form`'s `validate()` function to\nperform the validation.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 150,
                  "column": 4
                },
                "end": {
                  "line": 156,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Boolean",
                "desc": "Validation result or `true` if DOM is not yet ready."
              }
            },
            {
              "name": "serializeForm",
              "description": "Link to the form's serialize function.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 162,
                  "column": 4
                },
                "end": {
                  "line": 168,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Object",
                "desc": "Serialized form values or `undefined` if DOM is not ready.\nNote, `undefined` is returned **only** if DOM is not yet ready."
              }
            },
            {
              "name": "_computeHasOptionalParameters",
              "description": "Computes if any of the parameters are required.\nIt iterates over the model to find any first element that has `required`\npropeerty set to `false`.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 181,
                  "column": 4
                },
                "end": {
                  "line": 189,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "allowHideOptional",
                  "type": "Boolean",
                  "description": "State of `allowHideOptional` property.\nIf `false` this function always returns `false`."
                },
                {
                  "name": "record",
                  "type": "Object",
                  "description": "Change record. Note, it does not checks for\noptional parameters each time the model changes. It rescans the model\nwhen splices changed."
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "`true` if model has at leas one alement that is not required."
              }
            },
            {
              "name": "_computeRenderCheckbox",
              "description": "Computes value for `renderOptionalCheckbox` property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 197,
                  "column": 4
                },
                "end": {
                  "line": 199,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "render",
                  "type": "Boolean",
                  "description": "Value of `allowHideOptional` property"
                },
                {
                  "name": "has",
                  "type": "Boolean",
                  "description": "Value of `hasOptional` property."
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True if both values are `true`."
              }
            },
            {
              "name": "_computeIsCustom",
              "description": "Computes if given model item is a custom property (not generated by\nAMF model transformation).",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 207,
                  "column": 4
                },
                "end": {
                  "line": 212,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "model",
                  "type": "Object",
                  "description": "Model item."
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "`true` if `isCustom` property is set on model's schema\nproperty."
              }
            },
            {
              "name": "addCustom",
              "description": "Adds empty custom property to the list.\n\nIt dispatches `api-property-model-build` custom event that is handled by\n`api-view-model-transformer` to build model item.\nThis assumem that the transformer element is already in the DOM.\n\nAfter the transformation the element pushes or sets the data to the\n`model`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 225,
                  "column": 4
                },
                "end": {
                  "line": 247,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "binding",
                  "type": "String",
                  "description": "Value if the `binding` property."
                }
              ]
            },
            {
              "name": "_removeCustom",
              "description": "Removes custom item from the UI.\nThis can only be called from `dom-repeat` element so it contain's\n`model` property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 255,
                  "column": 4
                },
                "end": {
                  "line": 257,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ]
            },
            {
              "name": "computeIsOptional",
              "description": "Computes if model item is optional.\nThe items is always optional if is not required and when `hasOptional`\nis set to `true`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 267,
                  "column": 4
                },
                "end": {
                  "line": 275,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "hasOptional",
                  "type": "Boolean",
                  "description": "[description]"
                },
                {
                  "name": "model",
                  "type": "Object",
                  "description": "Model item."
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "`true` if the model item is optional in the form."
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 0
            },
            "end": {
              "line": 278,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcBehaviors.ApiFormMixin",
          "attributes": [
            {
              "name": "model",
              "description": "View model to use to render the form.",
              "sourceRange": {
                "start": {
                  "line": 46,
                  "column": 8
                },
                "end": {
                  "line": 49,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "optional-opened",
              "description": "Set to true to show optional parameters (not required by the API).",
              "sourceRange": {
                "start": {
                  "line": 53,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "has-optional",
              "description": "Computed value from `allowHideOptional` and view model.\n`true` if current model has any optional property.",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 8
                },
                "end": {
                  "line": 65,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "allow-hide-optional",
              "description": "If set it computes `hasOptional` property and shows checkbox in the\nform to show / hide optional properties.",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 70,
                  "column": 34
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "render-optional-checkbox",
              "description": "Computed flag to determine if optional checkbox can be rendered",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 77,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "allow-disable-params",
              "description": "If set, enable / disable param checkbox is rendered next to each\nform item.",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 35
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "allow-custom",
              "description": "When set, renders \"add custom\" item button.\nIf the element is to be used withouth AMF model this should always\nbe enabled. Otherwise users won't be able to add a parameter.",
              "sourceRange": {
                "start": {
                  "line": 88,
                  "column": 8
                },
                "end": {
                  "line": 88,
                  "column": 28
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "narrow",
              "description": "Renders items in \"narrow\" view",
              "sourceRange": {
                "start": {
                  "line": 92,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 23
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ]
}
